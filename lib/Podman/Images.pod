=head1 Podman::Images

Provides the operations against images for a Podman service.

 my $Images = Podman::Images->new(Client => Podman::Client->new());
 
 # Display names and Ids of available images.
 for my $Image (@{ $Images->list() }) {
     my $Info = $Image->Inspect();
     printf "%s: %s\n", $Image->Id, $Info->{RepoTags}->[0];
 }

=head1 Attributes

=head2 C<has 'Client'; #23>

Podman::Client API connector.

=head1 Methods

=head2 C<sub List($Self); #44>

List all local stored images.

 use Podman::Client;
 
 my $Images = Podman::Images->new(Client => Podman::Client->new());
 
 my $List = $Images->List();
 is(ref $List, 'ARRAY', 'Images list ok.');
 
 if ($List) {
     is(ref $List->[0], 'Podman::Image', 'Images list items ok.');
 }

=cut

#Pod::HTML2Pod conversion notes:
# 899 bytes of input
#Sat Jan 29 14:01:39 2022 tschaefer
# No a_name switch not specified, so will not try to render <a name='...'>
# Will try to render <a href='...'>
# Untranslatable link: "Client.html"
